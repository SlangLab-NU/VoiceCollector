# Build step #1: Build the frontend
# ---------------------------------
# Use an official Node runtime as the base image
FROM node:16-alpine as build

# Set environment variables
ENV PATH /web/node_modules/.bin:$PATH

# Set working directory
WORKDIR /frontend

# Copy package.json and package-lock.json
COPY ./web/package.json /frontend
COPY ./web/src ./src
COPY ./web/public ./public

# Install dependencies
RUN yarn install --silent

# Build the app
RUN yarn build


# Build step #2: Build the backend
# ---------------------------------
# Use an official Python image as the base image
FROM python:3.9

# Set environment variables
ENV S3_HOSTNAME='localhost:9000'
ENV S3_BUCKET='local-s3'
ENV REGION_NAME=''
ENV S3_ACCESS_KEY='minioadmin'
ENV S3_SECRET_KEY='minioadmin'
ENV SECURE='False'

# Set working directory
WORKDIR /app

# Copy the frontend build from the build stage
COPY --from=build /frontend/build ./build

# Install SQLite3 and ffmpeg
RUN apt-get update && apt-get install -y sqlite3 libsqlite3-dev
RUN apt-get update && apt-get install -y ffmpeg libavcodec-extra

# Copy the current directory contents into the container at /app
COPY ./server/requirements*.txt /app
COPY ./server/app /app

# Install any needed packages specified in requirements.txt and initialize database
RUN pip install -r requirements.txt
RUN rm -rf /root/.cache/pip
RUN python init_db.py

# Set environment variables for Flask
ENV FLASK_APP=__init__.py

# Expose port 5000 for Flask app
EXPOSE 5000

# Start Flask app
CMD ["flask", "run", "--host=0.0.0.0"]